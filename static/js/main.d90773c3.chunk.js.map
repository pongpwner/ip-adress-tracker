{"version":3,"sources":["images/icon-arrow.svg","components/search-bar/search-bar.component.jsx","components/result-info/result-info.component.jsx","components/result/result.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","search","setSearch","placeholder","onSubmit","className","type","value","onChange","event","target","onClick","src","arrow","alt","ResultInfo","title","answer","last","Result","ip","location","timezone","isp","App","useState","setIp","setLocation","setTimezone","setIsp","position","setPosition","GEO_API","ChangeMapView","coords","map","useMap","setView","getZoom","fetch","then","response","json","data","console","log","city","region","postalCode","lat","lng","catch","error","useEffect","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d90773c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import React from \"react\";\r\nimport \"./search-bar.styles.scss\";\r\nimport arrow from \"../../images/icon-arrow.svg\";\r\n\r\nconst SearchBar = ({ search, setSearch, placeholder, onSubmit }) => (\r\n  <div className=\"search-bar\">\r\n    <input\r\n      placeholder={placeholder}\r\n      type=\"text\"\r\n      value={search}\r\n      onChange={(event) => setSearch(event.target.value)}\r\n    ></input>\r\n    <button type=\"button\" onClick={onSubmit}>\r\n      <img src={arrow} alt=\"arrow\" />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./result-info.styles.scss\";\r\n\r\nconst ResultInfo = ({ title, answer, last }) => (\r\n  <div className={`result-info ${last ? \"last\" : \"\"}`}>\r\n    <h2>{title}</h2>\r\n    <div className=\"answer\">{answer}</div>\r\n  </div>\r\n);\r\n\r\nexport default ResultInfo;\r\n","import React from \"react\";\r\nimport \"./result.styles.scss\";\r\nimport ResultInfo from \"../result-info/result-info.component\";\r\n\r\nconst Result = ({ ip, location, timezone, isp }) => (\r\n  <div className=\"result\">\r\n    <ResultInfo title=\"IP Adress\" answer={ip} />\r\n    <ResultInfo title=\"Location\" answer={location} />\r\n    <ResultInfo title=\"Timezone\" answer={timezone} />\r\n    <ResultInfo title=\"ISP\" last answer={isp} />\r\n  </div>\r\n);\r\n\r\nexport default Result;\r\n","import SearchBar from \"./components/search-bar/search-bar.component\";\nimport Result from \"./components/result/result.component\";\nimport \"./App.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [ip, setIp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [timezone, setTimezone] = useState(\"\");\n  const [isp, setIsp] = useState(\"\");\n\n  const [position, setPosition] = useState([0, 0]);\n  const GEO_API = {\n    key: \"at_Fxgi57nTte7k4eYDuEuw6vdlmLSBi\",\n    base: \"https://geo.ipify.org/api/v2/country,city?\",\n  };\n  function ChangeMapView({ coords }) {\n    const map = useMap();\n    map.setView(coords, map.getZoom());\n\n    return null;\n  }\n\n  const onSubmit = () => {\n    fetch(`${GEO_API.base}apiKey=${GEO_API.key}&ipAddress=${search}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setIp(data.ip);\n        setLocation(\n          `${data.location.city}, ${data.location.region} ${data.location.postalCode}`\n        );\n        setTimezone(`UTC${data.location.timezone}`);\n        setIsp(data.isp);\n        setPosition([data.location.lat, data.location.lng]);\n      })\n      .catch((error) => {\n        console.log(\"invalid ip\");\n        setIp(\"\");\n        setLocation(\"\");\n        setTimezone(\"\");\n        setIsp(\"\");\n        setPosition([0, 0]);\n      });\n  };\n  useEffect(() => {\n    onSubmit();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <header>\n          <h1>IP Adress Tracker</h1>\n          <SearchBar\n            search={search}\n            setSearch={setSearch}\n            onSubmit={onSubmit}\n            placeholder=\"Search for any IP adress\"\n          />\n        </header>\n        <Result ip={ip} location={location} timezone={timezone} isp={isp} />\n      </div>\n      <MapContainer center={position} zoom={18} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ChangeMapView coords={position} />\n        <Marker position={position}>\n          <Popup>\n            A pretty CSS3 popup. <br /> Easily customizable.\n          </Popup>\n        </Marker>\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}